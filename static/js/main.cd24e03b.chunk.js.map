{"version":3,"sources":["pages/404.js","components/todo/index.js","components/listOfTodos/index.js","components/footer/index.js","components/error/index.js","services/todos.service.js","pages/Dashboard.js","services/auth.service.js","components/form/index.js","pages/Login.js","pages/index.js","App.js","index.js"],"names":["_404","flexDirection","width","height","backgroundColor","justifyContent","alignItems","flexDir","mb","padding","textAlign","color","to","fontSize","minW","base","md","Todo","title","isCompleted","useState","completed","setCompleted","p","shadow","borderWidth","bgColor","defaultChecked","onChange","skeletonList","Array","map","SkeletonTodos","_item","index","speed","marginBottom","ListOfTodos","data","loading","divider","borderColor","spacing","align","id","Footer","size","target","rel","href","Error","message","defaultProps","getTodos","a","fetch","process","then","json","catch","error","Dashboard","isLoading","setIsLoading","todos","setTodos","setError","useEffect","getTodosService","result","slice","alignSelf","as","onClick","localStorage","removeItem","window","location","reload","margin","paddingTop","paddingBottom","overflowY","Form","showPassword","setShowPassword","user","setUser","onSubmit","event","preventDefault","name","password","username","setItem","JSON","stringify","login","boxShadow","type","placeholder","e","value","h","borderRadius","variant","colorScheme","Login","pages","path","component","getItem","NotFound","App","page","key","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd24e03b.chunk.js","sourcesContent":["import {\n    Box,\n    Flex,\n    Heading,\n    Stack,\n    Text\n  } from \"@chakra-ui/react\";\n  import { Link } from \"react-router-dom\";\n\nconst _404 = () => (\n    <Flex\n    flexDirection=\"column\"\n    width=\"100wh\"\n    height=\"100vh\"\n    backgroundColor=\"gray.100\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    >\n  <Stack\n    flexDir=\"column\"\n    mb=\"2\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    padding=\"14\"\n  >\n    <Heading textAlign=\"center\" color=\"teal.500\">Ups, it seems there is nothing around here</Heading>\n    <Link to=\"/\"><Text fontSize=\"xl\" color=\"blue.500\">Go back üôèüèª</Text></Link>\n    <Box minW={{ base: \"90%\", md: \"468px\" }}>\n    </Box>\n  </Stack>\n</Flex>\n)\n\nexport default _404","import React, { useState } from 'react'\nimport {\n    Box,\n    Heading,\n    Switch,\n    HStack\n  } from \"@chakra-ui/react\";\nimport PropTypes from 'prop-types' \n\nconst Todo = ({ title, isCompleted }) => {\n\n    const [completed, setCompleted] = useState(isCompleted)\n\n    return (\n        <Box p={5} shadow=\"md\" borderWidth=\"1px\" bgColor={completed ? 'green.300' : 'red.400'}>\n            <HStack justifyContent=\"space-between\">\n                <Heading fontSize=\"xl\" color={completed ? 'green.900' : 'red.100'}>{title}</Heading>\n                <Switch defaultChecked={completed} onChange={() => setCompleted(!completed)}/>\n            </HStack>\n        </Box>\n    )\n}\n\nTodo.propTypes = {\n    title: PropTypes.string.isRequired,\n    isCompleted: PropTypes.bool.isRequired,\n};\n\nexport default Todo","import {\n    VStack,\n    StackDivider,\n    Skeleton\n} from \"@chakra-ui/react\";\nimport PropTypes from 'prop-types'\nimport Todo from \"../todo\";\n\nconst skeletonList = Array(...Array(10)).map(() => 'test');\n\nconst SkeletonTodos = () => (skeletonList.map((_item, index) => <Skeleton height=\"64px\" key={index} speed={0} marginBottom=\"8\"/>))\n\n\nconst ListOfTodos = ({data, loading}) => (\n    <VStack\n        divider={<StackDivider borderColor=\"gray.200\" />}\n        spacing={4}\n        align=\"stretch\"\n    >\n        {\n            loading && <SkeletonTodos />\n        }\n        {\n            !loading && data.map(({title, completed, id}) => <Todo isCompleted={completed} title={title} key={id} />)\n        }\n    </VStack>\n)\n\nListOfTodos.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string,\n        completed: PropTypes.bool,\n    })),\n    loading: PropTypes.bool,\n}\n\nexport default ListOfTodos","import {\n    Flex,\n    Heading,\n  } from \"@chakra-ui/react\";\n\nconst Footer = () => \n    <Flex\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        padding=\"10\"\n        >\n        <Heading textAlign=\"center\" color=\"blue.400\" size=\"md\">Made with ‚ù§Ô∏è by <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.linkedin.com/in/federico-agustin-annacondia-28104512b/\">Agustin Annacondia</a></Heading>\n    </Flex>\n\nexport default Footer","import {\n    Alert,\n    AlertIcon,\n    AlertTitle,\n    AlertDescription,\n    CloseButton\n} from \"@chakra-ui/react\";\nimport PropTypes from 'prop-types' \n\nconst Error = ({ message }) => {\n    <Alert status=\"error\">\n        <AlertIcon />\n        <AlertTitle mr={2}>Error!</AlertTitle>\n        <AlertDescription>{message}</AlertDescription>\n        <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" />\n    </Alert>\n}\n\nError.propTypes = {\n    message: PropTypes.string\n}\n\nError.defaultProps = {\n    message: \"There was an error processing your request\"\n}\n\nexport default Error","/**\n * \n *  This should be a module that calls to a Todos API, using any security measure like a session token\n *  in the Authentication Header of the request, in order to identify the user and the permissions.\n *  To solve the challenge and simplify the solution, this will call an Mocked API and save the status of\n *  the Todos in a store\n * \n */\n\nconst getTodos = async () => await fetch(`${process.env.REACT_APP_URL_API}/todos`).then((data) => data.json()).catch((error) => ({ error: error.message }))\n\nconst saveTodos = async () => {}\n\nexport { getTodos, saveTodos }","import { useEffect, useState } from \"react\"\nimport {\n    Box,\n    Flex,\n    Heading,\n    Stack,\n  } from \"@chakra-ui/react\";\nimport ListOfTodos from '../components/listOfTodos'\nimport Footer from \"../components/footer\";\nimport Error from '../components/error'\nimport { getTodos as getTodosService } from '../services/todos.service'\nimport { logout } from \"../services/auth.service\";\n\nconst Dashboard = () => {\n    \n    const [isLoading, setIsLoading] = useState(true)\n    const [todos, setTodos] = useState([])\n    const [error, setError] = useState(\"\")\n\n    useEffect(() => {\n        const getTodos = async () => { \n            const result = await getTodosService()\n            if(result.error) \n              setError(result.error)\n            else \n              setTodos(result.slice(0, 10))\n            setIsLoading(false)\n        }\n        getTodos()\n    }, [])\n\n    return (\n      <Flex\n        flexDirection=\"column\"\n        backgroundColor=\"gray.100\"\n        alignItems=\"center\"\n      >\n        <Stack\n          flexDir=\"column\"\n          mb=\"2\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          padding=\"14\"\n        >\n          <Heading alignSelf=\"end\" as=\"p\" size=\"md\" onClick={() => { logout(); window.location.reload(); }} margin=\"0\"  >Log out</Heading>\n          <Heading textAlign=\"center\" color=\"teal.500\" paddingTop=\"20\" paddingBottom=\"20\">Here you have a list of your todos üìù</Heading>\n          <Box overflowY=\"scroll\">\n          {\n            <ListOfTodos data={todos} loading={isLoading}/>\n          }\n          </Box>\n        </Stack>\n        {\n          !!error && <Error message={error}/>\n        }\n        <Footer />\n      </Flex>\n    )\n}\nexport default Dashboard","/**\n * \n *  This should be a module that calls to an Auth API, but in order to solve the challenge,\n *  this module will only save login info in a store\n * \n */\n\nconst login = ({ username, password }) => {\n    if (username && password) {\n        localStorage.setItem(\"session\", JSON.stringify({ username, password }));\n    }\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"session\");\n};\n\nconst getUserLogged = () => {\n  const user = localStorage.getItem('session')\n  return user\n}\n\nexport {\n  login,\n  logout,\n  getUserLogged\n};","import { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  Heading,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Stack\n} from \"@chakra-ui/react\";\nimport { login } from \"../../services/auth.service\";\n\nconst Form = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [user, setUser] = useState({})\n\n  const handleShowClick = () => setShowPassword(!showPassword);\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if(user.name && user.password) {\n      login({ username: user.name, password: user.password })\n      window.location.reload();\n    }\n  }\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      width=\"100wh\"\n      height=\"100vh\"\n      backgroundColor=\"gray.100\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Stack\n        flexDir=\"column\"\n        mb=\"2\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Heading textAlign=\"center\" color=\"blue.400\">Welcome to the Amazing Challenge üöÄ</Heading>\n        <Box minW={{ base: \"90%\", md: \"468px\" }}>\n          <form onSubmit={handleSubmit}>\n            <Stack\n              spacing={4}\n              p=\"1rem\"\n              backgroundColor=\"whiteAlpha.900\"\n              boxShadow=\"md\"\n            >\n              <FormControl>\n                <InputGroup>\n                  <Input type=\"text\" placeholder=\"Name\" onChange={(e) => setUser({...user, name: e.target.value})}/>\n                </InputGroup>\n              </FormControl>\n              <FormControl>\n                <InputGroup>\n                  <Input\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"Password\"\n                    onChange={(e) => setUser({...user, password: e.target.value})}\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button h=\"1.75rem\" size=\"lg\" onClick={handleShowClick}>\n                      {showPassword ? \"üôà\" : \"üêµ\"}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Button\n                borderRadius={0}\n                type=\"submit\"\n                variant=\"solid\"\n                colorScheme=\"blue\"\n                width=\"full\"\n              >\n                Login\n              </Button>\n            </Stack>\n          </form>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n};\n\nexport default Form;\n","import Form from '../components/form/index'\n\nconst Login = () => <Form />\n\nexport default Login","import NotFound from './404'\nimport Dashboard from './Dashboard'\nimport Login from './Login'\nimport { getUserLogged } from '../services/auth.service'\n\nconst user = getUserLogged()\n\nconst pages = [\n    {\n        path: '/',\n        component: user ? Dashboard : Login\n    },\n    {\n        path: '/login',\n        component: Login\n    },\n    {\n        path: '*',\n        component: NotFound\n    },\n]\n\nexport default pages","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport pages from './pages'\n\nconst App = () => \n(\n    <Router>\n      <Switch>\n      {\n        pages.map((page, key) => <Route exact path={page.path} component={page.component} key={key} />)\n      }\n      </Switch>\n    </Router>\n);\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}